<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"  xmlns:sap="http://www.mulesoft.org/schema/mule/sap" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/sap http://www.mulesoft.org/schema/mule/sap/current/mule-sap.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <flow name="createOpportunityInSalesforceFlow" >
        <sfdc:create config-ref="Salesforce" type="Opportunity" doc:name="Create Opportunity in Salesforce">
            <sfdc:objects ref="#[payload]"/>
        </sfdc:create>

        <logger level="INFO" message="Create Opportunities in Salesforce result: #[payload]" doc:name="Logger"/>
    </flow>
    <flow name="retrieveSalesOrderFromSapFlow" >
        <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="SAP" type="function" functionName="BAPI_SALESORDER_GETLIST" xmlVersion="2" outputXml="true" responseTimeout="10000" doc:name="BAPI_SALESORDER_GETLIST">
            <sap:definition><![CDATA[<BAPI_SALESORDER_GETLIST>
	<import>
		<PURCHASE_ORDER_NUMBER>#[payload['Id']]</PURCHASE_ORDER_NUMBER>
	</import>
</BAPI_SALESORDER_GETLIST>]]></sap:definition>

        </sap:outbound-endpoint>
        <dw:transform-message doc:name="BAPI_SALESORDER_GETLIST to Sales Order Id">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
using (so = payload."BAPI_SALESORDER_GETLIST".tables."SALES_ORDERS".*row[0] when payload."BAPI_SALESORDER_GETLIST".tables."SALES_ORDERS" != "" otherwise null)
{
	Id: so.SD_DOC when (so != null) otherwise null,
	AccountId: so.SOLD_TO when (so != null) otherwise null
}]]></dw:set-payload>
        </dw:transform-message>
           </flow>
    <flow name="deleteOpportunityFromSalesforceFlow" >
        <sfdc:delete config-ref="Salesforce" doc:name="Delete Opportunity from Salesforce instance Salesforce">
            <sfdc:ids ref="#[payload]"/>
        </sfdc:delete>
        <logger level="INFO" message="Remove Opportunities from Salesforce result: #[payload]" doc:name="Logger"/>
    </flow>
    <flow name="deleteSalesOrderFromSapFlow" >
        <foreach doc:name="For Each">
            <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="SAP" type="function" functionName="BAPI_SALESORDER_CHANGE" xmlVersion="2" outputXml="true" evaluateFunctionResponse="true" bapiTransaction="true" responseTimeout="10000" doc:name="Delete Sales Order from SAP">
                <sap:transaction action="NONE"/>
                <sap:definition><![CDATA[<BAPI_SALESORDER_CHANGE>
	<import>
		<SALESDOCUMENT>#[payload]</SALESDOCUMENT>
		<ORDER_HEADER_INX>
			<UPDATEFLAG>D</UPDATEFLAG>
		</ORDER_HEADER_INX>
	</import>
</BAPI_SALESORDER_CHANGE>]]></sap:definition>

            </sap:outbound-endpoint>
            <logger message="Remove Opportunities from SAP result: #[payload]" level="INFO" doc:name="Logger"/>
        </foreach>
    </flow>
    
    <flow name="createAccountInSalesforceFlow" >
        <sfdc:create config-ref="Salesforce" type="Account" doc:name="Salesforce">
            <sfdc:objects ref="#[payload]"/>
        </sfdc:create>
        <logger level="INFO" message="Create Account in Salesforce result: #[payload]" doc:name="Logger"/>
    </flow>
    <flow name="retrieveAccountFromSapFlow" >
                <enricher source="#[payload[0]['CustomerNumber'] == null ? null : payload[0]]" target="#[payload]" doc:name="store result in customerInSap">
                    <processor-chain doc:name="Processor Chain">
                        <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="SAP" type="function" functionName="BAPI_CUSTOMER_FIND" xmlVersion="2" outputXml="true" evaluateFunctionResponse="true" responseTimeout="10000" doc:name="Get Customer by Name">
                    <sap:definition><![CDATA[<BAPI_CUSTOMER_FIND>
	<import>
		<MAX_CNT>0</MAX_CNT>
		<PL_HOLD>X</PL_HOLD>
	</import>
  	<tables>
		<SELOPT_TAB>
			<row id="0">
				<TABNAME>KNA1</TABNAME>
				<FIELDNAME>NAME1</FIELDNAME>
				<FIELDVALUE>#[org.apache.commons.lang3.StringEscapeUtils.escapeXml(payload['Name'].length() > 20 ? payload['Name'].substring(0,20) : payload['Name'])]</FIELDVALUE>
			</row>
		</SELOPT_TAB>
	</tables>
</BAPI_CUSTOMER_FIND>
]]></sap:definition>

                        </sap:outbound-endpoint>
                        <dw:transform-message doc:name="Transform BAPI_CUSTOMER_FIND to Customer">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload."BAPI_CUSTOMER_FIND".tables."RESULT_TAB".*row map {
	CustomerNumber : $.CUSTOMER when ($.CUSTOMER != "") otherwise null,
	Name : $.FIELDVALUE	
}]]></dw:set-payload>
                        </dw:transform-message>
                    </processor-chain>
                </enricher>
        <logger level="INFO" message="Retrieve Accounts result: #[payload]" doc:name="Logger"/>
    </flow>
    <flow name="deleteAccountFromSalesforceFlow" >
        <sfdc:delete config-ref="Salesforce" doc:name="Salesforce">
            <sfdc:ids ref="#[payload]"/>
        </sfdc:delete>
        <logger level="INFO" message="Remove Accounts from Salesforce result: #[payload]" doc:name="Logger"/>
    </flow>
    <flow name="deleteAccountFromSapFlow" >
        <foreach doc:name="For Each">
            <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="SAP" type="function" functionName="ZCAFM_CUSTOMER_DELETE" xmlVersion="2" outputXml="true" evaluateFunctionResponse="true" responseTimeout="10000" doc:name="Delete Customer from SAP">
                <sap:definition><![CDATA[<ZCAFM_CUSTOMER_DELETE>
	<import>
		<PI_CUSTOMER >#[payload]</PI_CUSTOMER >
	</import>
</ZCAFM_CUSTOMER_DELETE>
]]></sap:definition>

            </sap:outbound-endpoint>
            <logger message="Remove Accounts from SAP result: #[payload]" level="INFO" doc:name="Logger"/>
        </foreach>
    </flow>
    
</mule>